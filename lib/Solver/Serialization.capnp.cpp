// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Serialization.capnp

#include "Serialization.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<99> b_f4f540d34e711894 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148,  24, 113,  78, 211,  64, 245, 244,
     20,   0,   0,   0,   1,   0,   1,   0,
    241, 162,  30, 160, 202,  76,  11, 217,
      5,   0,   7,   0,   0,   0,   2,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  81, 117, 101, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    197, 223, 252, 105,   3, 121,  19, 165,
    193,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 116, 114,  97, 105,
    110, 116, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 114, 101, 115, 115, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 116,  85, 110, 115,  97, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 117, 110, 116, 101, 114,  69,
    120,  65, 114, 114,  97, 121,  73, 100,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f4f540d34e711894 = b_f4f540d34e711894.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f4f540d34e711894[] = {
  &s_a513790369fcdfc5,
};
static const uint16_t m_f4f540d34e711894[] = {0, 3, 4, 1, 2};
static const uint16_t i_f4f540d34e711894[] = {2, 3, 0, 1, 4};
const ::capnp::_::RawSchema s_f4f540d34e711894 = {
  0xf4f540d34e711894, b_f4f540d34e711894.words, 99, d_f4f540d34e711894, m_f4f540d34e711894,
  1, 5, i_f4f540d34e711894, nullptr, nullptr, { &s_f4f540d34e711894, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_a513790369fcdfc5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    197, 223, 252, 105,   3, 121,  19, 165,
     26,   0,   0,   0,   1,   0,   1,   0,
    148,  24, 113,  78, 211,  64, 245, 244,
      5,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  81, 117, 101, 114,
    121,  46, 100,  97, 116,  97,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 112, 114,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     61, 162,   6,  24,   0, 217,  10, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 114,  97, 121,  76, 105, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    239,  54, 126, 179,  99,  50,  14, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 100,  97, 116, 101,  78, 111,
    100, 101,  76, 105, 115, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236, 107, 212, 153, 204,  25, 228, 154,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a513790369fcdfc5 = b_a513790369fcdfc5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a513790369fcdfc5[] = {
  &s_8b0ad9001806a23d,
  &s_9ae419cc99d46bec,
  &s_d00e3263b37e36ef,
  &s_f4f540d34e711894,
};
static const uint16_t m_a513790369fcdfc5[] = {1, 0, 2};
static const uint16_t i_a513790369fcdfc5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a513790369fcdfc5 = {
  0xa513790369fcdfc5, b_a513790369fcdfc5.words, 77, d_a513790369fcdfc5, m_a513790369fcdfc5,
  4, 3, i_a513790369fcdfc5, nullptr, nullptr, { &s_a513790369fcdfc5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_d7eece1599ab8da9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    169, 141, 171, 153,  21, 206, 238, 215,
     20,   0,   0,   0,   1,   0,   1,   0,
    241, 162,  30, 160, 202,  76,  11, 217,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 112, 108,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    158,  42, 155,  49, 147, 110,  23, 216,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 115, 111, 108, 118,  97,  98,
    108, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 116,   0,   0,   0,   0,   0,
    117, 110, 115,  97, 116,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7eece1599ab8da9 = b_d7eece1599ab8da9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d7eece1599ab8da9[] = {
  &s_d8176e93319b2a9e,
};
static const uint16_t m_d7eece1599ab8da9[] = {1, 2, 0};
static const uint16_t i_d7eece1599ab8da9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d7eece1599ab8da9 = {
  0xd7eece1599ab8da9, b_d7eece1599ab8da9.words, 57, d_d7eece1599ab8da9, m_d7eece1599ab8da9,
  1, 3, i_d7eece1599ab8da9, nullptr, nullptr, { &s_d7eece1599ab8da9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_d8176e93319b2a9e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    158,  42, 155,  49, 147, 110,  23, 216,
     26,   0,   0,   0,   1,   0,   1,   0,
    169, 141, 171, 153,  21, 206, 238, 215,
      1,   0,   7,   0,   1,   0,   2,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 112, 108,
    121,  46, 115,  97, 116,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    110, 111,  65, 115, 115, 105, 103, 110,
    109, 101, 110, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 115, 115, 105, 103, 110, 109, 101,
    110, 116, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8176e93319b2a9e = b_d8176e93319b2a9e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d8176e93319b2a9e[] = {
  &s_d7eece1599ab8da9,
};
static const uint16_t m_d8176e93319b2a9e[] = {1, 0};
static const uint16_t i_d8176e93319b2a9e[] = {0, 1};
const ::capnp::_::RawSchema s_d8176e93319b2a9e = {
  0xd8176e93319b2a9e, b_d8176e93319b2a9e.words, 57, d_d8176e93319b2a9e, m_d8176e93319b2a9e,
  1, 2, i_d8176e93319b2a9e, nullptr, nullptr, { &s_d8176e93319b2a9e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_8b0ad9001806a23d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     61, 162,   6,  24,   0, 217,  10, 139,
     20,   0,   0,   0,   1,   0,   3,   0,
    241, 162,  30, 160, 202,  76,  11, 217,
      2,   0,   7,   0,   0,   0,   2,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 112, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    234, 172,  90, 136,  64,  21,  94, 136,
      1,   0,   0,   0,  42,   0,   0,   0,
     75, 105, 110, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    225,  25, 117, 247, 230, 192, 144, 220,
    105,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    232,  27, 228,  64, 163,  66,  63, 136,
     85,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    234, 172,  90, 136,  64,  21,  94, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 105, 100, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 116,  97, 110, 116,
     69, 120, 112, 114,   0,   0,   0,   0,
    110, 111, 110,  67, 111, 110, 115, 116,
     97, 110, 116,  69, 120, 112, 114,   0, }
};
::capnp::word const* const bp_8b0ad9001806a23d = b_8b0ad9001806a23d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8b0ad9001806a23d[] = {
  &s_883f42a340e41be8,
  &s_885e1540885aacea,
  &s_dc90c0e6f77519e1,
};
static const uint16_t m_8b0ad9001806a23d[] = {2, 0, 3, 1};
static const uint16_t i_8b0ad9001806a23d[] = {2, 3, 0, 1};
const ::capnp::_::RawSchema s_8b0ad9001806a23d = {
  0x8b0ad9001806a23d, b_8b0ad9001806a23d.words, 69, d_8b0ad9001806a23d, m_8b0ad9001806a23d,
  3, 4, i_8b0ad9001806a23d, nullptr, nullptr, { &s_8b0ad9001806a23d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<152> b_885e1540885aacea = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    234, 172,  90, 136,  64,  21,  94, 136,
     25,   0,   0,   0,   2,   0,   0,   0,
     61, 162,   6,  24,   0, 217,  10, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 112, 114,
     46,  75, 105, 110, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    132,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    125,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    117,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    109,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     53,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
     45,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     21,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     23,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     26,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     27,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     30,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     31,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 116,  97, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  79, 112, 116, 105, 109,
    105, 122, 101, 100,   0,   0,   0,   0,
    114, 101,  97, 100,   0,   0,   0,   0,
    115, 101, 108, 101,  99, 116,   0,   0,
     99, 111, 110,  99,  97, 116,   0,   0,
    101, 120, 116, 114,  97,  99, 116,   0,
    122,  69, 120, 116,   0,   0,   0,   0,
    115,  69, 120, 116,   0,   0,   0,   0,
     97, 100, 100,   0,   0,   0,   0,   0,
    115, 117,  98,   0,   0,   0,   0,   0,
    109, 117, 108,   0,   0,   0,   0,   0,
    117,  68, 105, 118,   0,   0,   0,   0,
    115,  68, 105, 118,   0,   0,   0,   0,
    117,  82, 101, 109,   0,   0,   0,   0,
    115,  82, 101, 109,   0,   0,   0,   0,
    110, 111, 116,   0,   0,   0,   0,   0,
     97, 110, 100,   0,   0,   0,   0,   0,
    111, 114,   0,   0,   0,   0,   0,   0,
    120, 111, 114,   0,   0,   0,   0,   0,
    115, 104, 108,   0,   0,   0,   0,   0,
    108,  83, 104, 114,   0,   0,   0,   0,
     97,  83, 104, 114,   0,   0,   0,   0,
    101, 113,   0,   0,   0,   0,   0,   0,
    110, 101,   0,   0,   0,   0,   0,   0,
    117, 108, 116,   0,   0,   0,   0,   0,
    117, 108, 101,   0,   0,   0,   0,   0,
    117, 103, 116,   0,   0,   0,   0,   0,
    117, 103, 101,   0,   0,   0,   0,   0,
    115, 108, 116,   0,   0,   0,   0,   0,
    115, 108, 101,   0,   0,   0,   0,   0,
    115, 103, 116,   0,   0,   0,   0,   0,
    115, 103, 101,   0,   0,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0, }
};
::capnp::word const* const bp_885e1540885aacea = b_885e1540885aacea.words;
#if !CAPNP_LITE
static const uint16_t m_885e1540885aacea[] = {21, 8, 16, 4, 0, 22, 5, 20, 10, 23, 15, 1, 17, 2, 12, 7, 14, 3, 31, 30, 19, 29, 28, 9, 11, 13, 27, 26, 25, 24, 32, 18, 6};
const ::capnp::_::RawSchema s_885e1540885aacea = {
  0x885e1540885aacea, b_885e1540885aacea.words, 152, nullptr, m_885e1540885aacea,
  0, 33, nullptr, nullptr, nullptr, { &s_885e1540885aacea, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Kind_885e1540885aacea, 885e1540885aacea);
static const ::capnp::_::AlignedData<52> b_dc90c0e6f77519e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225,  25, 117, 247, 230, 192, 144, 220,
     25,   0,   0,   0,   1,   0,   3,   0,
     61, 162,   6,  24,   0, 217,  10, 139,
      2,   0,   7,   0,   1,   0,   2,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 112, 114,
     46,  99, 111, 110, 115, 116,  97, 110,
    116,  69, 120, 112, 114,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    119, 111, 114, 100,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 111, 114, 100, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dc90c0e6f77519e1 = b_dc90c0e6f77519e1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dc90c0e6f77519e1[] = {
  &s_8b0ad9001806a23d,
};
static const uint16_t m_dc90c0e6f77519e1[] = {0, 1};
static const uint16_t i_dc90c0e6f77519e1[] = {0, 1};
const ::capnp::_::RawSchema s_dc90c0e6f77519e1 = {
  0xdc90c0e6f77519e1, b_dc90c0e6f77519e1.words, 52, d_dc90c0e6f77519e1, m_dc90c0e6f77519e1,
  1, 2, i_dc90c0e6f77519e1, nullptr, nullptr, { &s_dc90c0e6f77519e1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_883f42a340e41be8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232,  27, 228,  64, 163,  66,  63, 136,
     25,   0,   0,   0,   1,   0,   3,   0,
     61, 162,   6,  24,   0, 217,  10, 139,
      2,   0,   7,   0,   1,   0,   3,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 112, 114,
     46, 110, 111, 110,  67, 111, 110, 115,
    116,  97, 110, 116,  69, 120, 112, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    181,   3, 216, 220,  57, 147,  10, 159,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    125, 119,  71, 137,   4, 110, 110, 232,
    105,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 100,  73, 100, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 116, 104, 101, 114,  78, 111, 110,
     67, 111, 110, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  69, 120, 112, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 114,  97,  99, 116,  69,
    120, 112, 114,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_883f42a340e41be8 = b_883f42a340e41be8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_883f42a340e41be8[] = {
  &s_8b0ad9001806a23d,
  &s_9f0a9339dcd803b5,
  &s_e86e6e048947777d,
};
static const uint16_t m_883f42a340e41be8[] = {3, 0, 1, 2};
static const uint16_t i_883f42a340e41be8[] = {1, 2, 3, 0};
const ::capnp::_::RawSchema s_883f42a340e41be8 = {
  0x883f42a340e41be8, b_883f42a340e41be8.words, 72, d_883f42a340e41be8, m_883f42a340e41be8,
  3, 4, i_883f42a340e41be8, nullptr, nullptr, { &s_883f42a340e41be8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_9f0a9339dcd803b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181,   3, 216, 220,  57, 147,  10, 159,
     41,   0,   0,   0,   1,   0,   3,   0,
    232,  27, 228,  64, 163,  66,  63, 136,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 112, 114,
     46, 110, 111, 110,  67, 111, 110, 115,
    116,  97, 110, 116,  69, 120, 112, 114,
     46, 114, 101,  97, 100,  69, 120, 112,
    114,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    117, 112, 100,  97, 116, 101,  76, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    125,  23, 104, 117, 182, 157,  78, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f0a9339dcd803b5 = b_9f0a9339dcd803b5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9f0a9339dcd803b5[] = {
  &s_883f42a340e41be8,
  &s_954e9db67568177d,
};
static const uint16_t m_9f0a9339dcd803b5[] = {0};
static const uint16_t i_9f0a9339dcd803b5[] = {0};
const ::capnp::_::RawSchema s_9f0a9339dcd803b5 = {
  0x9f0a9339dcd803b5, b_9f0a9339dcd803b5.words, 36, d_9f0a9339dcd803b5, m_9f0a9339dcd803b5,
  2, 1, i_9f0a9339dcd803b5, nullptr, nullptr, { &s_9f0a9339dcd803b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_e86e6e048947777d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 119,  71, 137,   4, 110, 110, 232,
     41,   0,   0,   0,   1,   0,   3,   0,
    232,  27, 228,  64, 163,  66,  63, 136,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 112, 114,
     46, 110, 111, 110,  67, 111, 110, 115,
    116,  97, 110, 116,  69, 120, 112, 114,
     46, 101, 120, 116, 114,  97,  99, 116,
     69, 120, 112, 114,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e86e6e048947777d = b_e86e6e048947777d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e86e6e048947777d[] = {
  &s_883f42a340e41be8,
};
static const uint16_t m_e86e6e048947777d[] = {0};
static const uint16_t i_e86e6e048947777d[] = {0};
const ::capnp::_::RawSchema s_e86e6e048947777d = {
  0xe86e6e048947777d, b_e86e6e048947777d.words, 35, d_e86e6e048947777d, m_e86e6e048947777d,
  1, 1, i_e86e6e048947777d, nullptr, nullptr, { &s_e86e6e048947777d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<114> b_d00e3263b37e36ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239,  54, 126, 179,  99,  50,  14, 208,
     20,   0,   0,   0,   1,   0,   2,   0,
    241, 162,  30, 160, 202,  76,  11, 217,
      2,   0,   7,   0,   0,   0,   2,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  65, 114, 114,  97,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 109,  97, 105, 110,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  97, 110, 103, 101,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 121, 109,  98, 111, 108, 105,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 116,  97, 110, 116,
     73, 100, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d00e3263b37e36ef = b_d00e3263b37e36ef.words;
#if !CAPNP_LITE
static const uint16_t m_d00e3263b37e36ef[] = {5, 2, 0, 3, 1, 4};
static const uint16_t i_d00e3263b37e36ef[] = {4, 5, 0, 1, 2, 3};
const ::capnp::_::RawSchema s_d00e3263b37e36ef = {
  0xd00e3263b37e36ef, b_d00e3263b37e36ef.words, 114, nullptr, m_d00e3263b37e36ef,
  0, 6, i_d00e3263b37e36ef, nullptr, nullptr, { &s_d00e3263b37e36ef, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_954e9db67568177d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125,  23, 104, 117, 182, 157,  78, 149,
     20,   0,   0,   0,   1,   0,   1,   0,
    241, 162,  30, 160, 202,  76,  11, 217,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  85, 112, 100,  97,
    116, 101,  76, 105, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     97, 114, 114,  97, 121,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100,  78, 111, 100, 101,
     73, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_954e9db67568177d = b_954e9db67568177d.words;
#if !CAPNP_LITE
static const uint16_t m_954e9db67568177d[] = {0, 1};
static const uint16_t i_954e9db67568177d[] = {0, 1};
const ::capnp::_::RawSchema s_954e9db67568177d = {
  0x954e9db67568177d, b_954e9db67568177d.words, 49, nullptr, m_954e9db67568177d,
  0, 2, i_954e9db67568177d, nullptr, nullptr, { &s_954e9db67568177d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_9ae419cc99d46bec = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    236, 107, 212, 153, 204,  25, 228, 154,
     20,   0,   0,   0,   1,   0,   2,   0,
    241, 162,  30, 160, 202,  76,  11, 217,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 101, 114, 105,  97, 108, 105, 122,
     97, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  85, 112, 100,  97,
    116, 101,  78, 111, 100, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 120, 116,  78, 111, 100, 101,
     73, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 101, 120,  69, 120, 112,
    114,  73, 100,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,  69, 120, 112,
    114,  73, 100,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ae419cc99d46bec = b_9ae419cc99d46bec.words;
#if !CAPNP_LITE
static const uint16_t m_9ae419cc99d46bec[] = {2, 1, 0, 3};
static const uint16_t i_9ae419cc99d46bec[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9ae419cc99d46bec = {
  0x9ae419cc99d46bec, b_9ae419cc99d46bec.words, 81, nullptr, m_9ae419cc99d46bec,
  0, 4, i_9ae419cc99d46bec, nullptr, nullptr, { &s_9ae419cc99d46bec, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace klee {
namespace serialization {

// Query
#ifndef _MSC_VER
constexpr uint16_t Query::_capnpPrivate::dataWordSize;
constexpr uint16_t Query::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Query::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Query::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Query::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Query::Data
#ifndef _MSC_VER
constexpr uint16_t Query::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t Query::Data::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Query::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Query::Data::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Query::Data::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Reply
#ifndef _MSC_VER
constexpr uint16_t Reply::_capnpPrivate::dataWordSize;
constexpr uint16_t Reply::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Reply::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Reply::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Reply::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Reply::Sat
#ifndef _MSC_VER
constexpr uint16_t Reply::Sat::_capnpPrivate::dataWordSize;
constexpr uint16_t Reply::Sat::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Reply::Sat::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Reply::Sat::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Reply::Sat::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Expr
#ifndef _MSC_VER
constexpr uint16_t Expr::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Expr::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Expr::ConstantExpr
#ifndef _MSC_VER
constexpr uint16_t Expr::ConstantExpr::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::ConstantExpr::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::ConstantExpr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::ConstantExpr::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Expr::ConstantExpr::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Expr::NonConstantExpr
#ifndef _MSC_VER
constexpr uint16_t Expr::NonConstantExpr::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::NonConstantExpr::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::NonConstantExpr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::NonConstantExpr::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Expr::NonConstantExpr::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Expr::NonConstantExpr::ReadExpr
#ifndef _MSC_VER
constexpr uint16_t Expr::NonConstantExpr::ReadExpr::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::NonConstantExpr::ReadExpr::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::NonConstantExpr::ReadExpr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::NonConstantExpr::ReadExpr::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Expr::NonConstantExpr::ReadExpr::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Expr::NonConstantExpr::ExtractExpr
#ifndef _MSC_VER
constexpr uint16_t Expr::NonConstantExpr::ExtractExpr::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::NonConstantExpr::ExtractExpr::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::NonConstantExpr::ExtractExpr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::NonConstantExpr::ExtractExpr::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Expr::NonConstantExpr::ExtractExpr::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Array
#ifndef _MSC_VER
constexpr uint16_t Array::_capnpPrivate::dataWordSize;
constexpr uint16_t Array::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Array::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Array::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Array::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UpdateList
#ifndef _MSC_VER
constexpr uint16_t UpdateList::_capnpPrivate::dataWordSize;
constexpr uint16_t UpdateList::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind UpdateList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UpdateList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UpdateList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UpdateNode
#ifndef _MSC_VER
constexpr uint16_t UpdateNode::_capnpPrivate::dataWordSize;
constexpr uint16_t UpdateNode::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind UpdateNode::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UpdateNode::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UpdateNode::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

